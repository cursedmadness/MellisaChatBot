from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters.command import Command
import time, datetime
from aiogram.enums import ChatType
import asyncio
from aiogram.enums import ParseMode

# –ò–º–ø–æ—Ä—Ç –±–¥
from database import (
    add_user, get_user_nickname, set_user_nickname,
    set_user_description, get_user_profile, get_user_description
)

reg_router = Router()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–∞–º–æ–π –∞–Ω–∫–µ—Ç—ã, –±–µ—Ä–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î(–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è —á–∞—Å—Ç–∏—á–Ω–æ)
async def get_profile_text(user_id: int) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∫–µ—Ç—ã.
    –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–º —Ä–æ—É—Ç–µ—Ä–µ.
    """
    profile_data = get_user_profile(user_id)
    
    if profile_data:
        # –ï—Å–ª–∏ –≤ –ø–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ—Ç (None), –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        description = profile_data.get("description") or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

        # –°–æ–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = (
            f"üë§ **–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞**\n\n"
            f"üìù **–ù–∏–∫–Ω–µ–π–º:** `{profile_data['nickname']}`\n"
            f"üÜî **ID:** `{user_id}`\n\n"
            f"‚≠ê **–†–µ–ø—É—Ç–∞—Ü–∏—è:** {profile_data['reputation']}\n"
            f"üìä **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** {profile_data['activity']}\n\n"
            f"üìÑ **–û–ø–∏—Å–∞–Ω–∏–µ:**\n_{description}_"
        )
        return text
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å /start"


# –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∫–µ—Ç—ã –∏ –ø—Ä–æ—Ñ–∏–ª—è(–Ω–∞–¥–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏)
@reg_router.message(Command('start'))
async def start_handler(message: Message):
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    nickname = get_user_nickname(user_id)
    
    if nickname:
        await message.answer(f"{nickname}, –º—ã –í–∞—Å —É–∑–Ω–∞–ª–∏! üëã")
    else:
        add_user(user_id, first_name)
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {first_name}! –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
        await message.answer(f"{first_name}, —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n"
                             f"<code>—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫</code> –∏–ª–∏/–∏ <code>—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ</code>\n"
                             f"—á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç–µ.")

# –†–æ—É—Ç–µ—Ä –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞ –≤ –∞–Ω–∫–µ—Ç–µ(–∏ –ø—Ä–æ—Ñ–∏–ª–µ)

@reg_router.message(Command('set_nickname'))
@reg_router.message(F.text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫'))
async def set_nickname_handler(message: Message):
    user_id = message.from_user.id
    text = message.text.strip()

    if text.startswith('/set_nickname'):
        nick = text[13:].strip()
    elif text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫'):
        nick = text[11:].strip()
    else:
        nick = ""       

    if not nick:
        await message.answer("üìù –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                             "–ü—Ä–∏–º–µ—Ä: /set_nickname –õ—é–±–∏—Ç–µ–ª—å –ü–∏–≤–∞")
        return
    else:
        new_nickname = nick
        set_user_nickname(user_id, new_nickname)
        await message.answer(f"üëç –í–∞—à –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_nickname}")

# –†–æ—É—Ç–µ—Ä –Ω–∞ —Å–º–µ–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç—ã(–∏ –ø—Ä–æ—Ñ–∏–ª—è)

@reg_router.message(Command('set_description'))
@reg_router.message(F.text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ'))
async def set_description_handler(message: Message):
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    user_id = message.from_user.id
    parts = message.text.strip()
    
    if parts.startswith('/set_description'):
        description = parts[16:].strip()
    elif parts.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ'):
        description = parts[16:].strip()
    else:
        description = ""   
    if not description:
        await message.answer("üìù –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                             "–ü—Ä–∏–º–µ—Ä: /set_nickname –õ—é–±–ª—é —Å–≤–µ—Ç–ª–æ–µ –ø–∏–≤–æ")
        return
    else:
        new_description = description
        set_user_description(user_id, description)
        await message.answer(f"üëç –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_description}")


# –†–æ—É—Ç–µ—Ä '–ê–Ω–∫–µ—Ç–∞' - –≤—ã–≤–æ–¥–∏—Ç –∞–Ω–∫–µ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ª—Å –±–æ—Ç–∞(–±—É–¥–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞(–≤–æ–∑–º–æ–∂–Ω–æ))

@reg_router.message(Command('anketa'))
@reg_router.message(F.text.lower().in_(['–∞–Ω–∫–µ—Ç–∞','–º–æ—è –∞–Ω–∫–µ—Ç–∞']))
async def profile_handler(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∞–Ω–∫–µ—Ç—É.
    """
    user_id = message.from_user.id
    # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    profile_text = await get_profile_text(user_id)
    
    await message.answer(profile_text, parse_mode="Markdown")
    await message.answer(f'–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã –í—ã –º–æ–∂–µ—Ç–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞.')

@reg_router.message(Command('delete_nickname'))
@reg_router.message(F.text.lower().in_(['—É–¥–∞–ª–∏—Ç—å –Ω–∏–∫','–æ—á–∏—Å—Ç–∏—Ç—å –Ω–∏–∫']))
async def reset_nickname_handler(message: Message):
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –µ–≥–æ –∏–º–µ–Ω–∏ –≤ Telegram.
    """
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º first_name, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –Ω–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    first_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    set_user_nickname(user_id, first_name)
    
    await message.answer(f"‚úÖ –í–∞—à –Ω–∏–∫ —Å–±—Ä–æ—à–µ–Ω. –¢–µ–ø–µ—Ä—å –æ–Ω: **{first_name}**", parse_mode="Markdown")

# --- –ù–û–í–´–ô –•–≠–ù–î–õ–ï–† –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ–ø–∏—Å–∞–Ω–∏—è ---
@reg_router.message(Command('delete_description'))
@reg_router.message(F.text.lower().in_(['—É–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ','–æ—á–∏—Å—Ç–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ']))
async def clear_description_handler(message: Message):
    """
    –û—á–∏—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ None (–∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–æ—Ç–æ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º –∫–∞–∫ "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    # –õ–∏–±–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "", —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Ç–æ—Ç –∂–µ.
    set_user_description(user_id, None) 
    
    await message.answer("üóëÔ∏è –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±—ã–ª–æ –æ—á–∏—â–µ–Ω–æ.")


@reg_router.message(F.text.lower().in_(['–º–æ–π –Ω–∏–∫','–Ω–∏–∫']))
async def show_my_nickname(message: Message):
    user_id = message.from_user.id
    nickname = get_user_nickname(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if nickname:
        await message.answer(f"üìù –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –Ω–∏–∫: **{nickname}**", parse_mode="Markdown")
    else:
        await message.answer("–Ø —Ç–µ–±—è –µ—â—ë –Ω–µ –∑–Ω–∞—é. –ù–∞–ø–∏—à–∏ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")


# --- –ù–û–í–´–ô –•–≠–ù–î–õ–ï–† –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è ---
@reg_router.message(F.text.lower().in_(['–º–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ','–æ–ø–∏—Å–∞–Ω–∏–µ']))
async def show_my_description(message: Message):
    user_id = message.from_user.id
    description = get_user_description(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    if description:
        await message.answer(f"üìÑ –¢–≤–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ:\n_{description}_", parse_mode="Markdown")
    else:
        # –≠—Ç–∞ –≤–µ—Ç–∫–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ None –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        await message.answer("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è. –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π `/set_description`.", parse_mode="Markdown")
