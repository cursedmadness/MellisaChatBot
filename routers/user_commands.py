from aiogram import Router, F
from aiogram.filters.command import Command
from aiogram.types import Message
from aiogram.enums import ChatType
import os
import time, datetime
from routers.admin_commands import ADMIN_IDS
from database import get_all_admins
from database import (
    add_user, get_user_nickname, set_user_nickname,
    set_user_description, get_user_profile, get_user_description,
    get_user_rate
)

user_router = Router() # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–∞–º–æ–π –∞–Ω–∫–µ—Ç—ã, –±–µ—Ä–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î(–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è —á–∞—Å—Ç–∏—á–Ω–æ)
async def get_profile_text(user_id: int) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∫–µ—Ç—ã.
    –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–º —Ä–æ—É—Ç–µ—Ä–µ.
    """
    profile_data = get_user_profile(user_id)
    
    if profile_data:
        # –ï—Å–ª–∏ –≤ –ø–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ—Ç (None), –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        description = profile_data.get("description") or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

        # –°–æ–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = (
            f"üë§ **–î–æ—Å—å–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞**\n\n"
            f"üóÉÔ∏è **–£—á—ë—Ç–Ω–æ–µ –∏–º—è:** `{profile_data['nickname']}`\n"
            f"üÜî **–ü—É–±–ª–∏—á–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä:** `{user_id}`\n\n"
            f"üçö **–°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥:** {profile_data['reputation']}\n"
            f"‚òÄÔ∏è **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** {profile_data['activity']}\n\n"
            f"üìÑ **–û–ø–∏—Å–∞–Ω–∏–µ:**\n_{description}_"
        )
        return text
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å /start"

# –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∫–µ—Ç—ã
@user_router.message(Command('start'))
async def start_handler(message: Message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    nickname = get_user_nickname(user_id)
    
    if nickname:
        await message.answer(f"{nickname}, –º—ã –í–∞—Å —É–∑–Ω–∞–ª–∏! üëã")
    else:
        add_user(user_id, first_name)
        await message.answer(f" üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}. –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É. –ü–∞—Ä—Ç–∏—è –≥–æ—Ä–¥–∏—Ç—Å—è –í–∞–º–∏!\n"
                            f"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å, –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —ç—Ç–∏–º —Å—Å—ã–ª–∫–∞–º:\n"
                            f"*—Å—Å—ã–ª–∫–∏*")

# –†–æ—É—Ç–µ—Ä –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞ –≤ –∞–Ω–∫–µ—Ç–µ

@user_router.message(Command('set_nickname'))
@user_router.message(F.text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –∏–º—è'))
async def set_nickname_handler(message: Message):
    user_id = message.from_user.id
    text = message.text.strip()

    if text.startswith('/set_nickname'):
        nick = text[13:].strip()
    elif text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –∏–º—è'):
        nick = text[11:].strip()
    else:
        nick = ""       

    if not nick:
        await message.answer("üìù –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                             "–ü—Ä–∏–º–µ—Ä: /set_nickname –õ—é–±–∏—Ç–µ–ª—å –ü–∏–≤–∞")
        return
    else:
        new_nickname = nick
        set_user_nickname(user_id, new_nickname)
        await message.answer(f"‚úÖ –í–∞—à–µ —É—á—ë—Ç–Ω–æ–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_nickname}")

# –†–æ—É—Ç–µ—Ä –Ω–∞ —Å–º–µ–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç—ã(–∏ –ø—Ä–æ—Ñ–∏–ª—è)

@user_router.message(Command('set_description'))
@user_router.message(F.text.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ'))
async def set_description_handler(message: Message):
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    user_id = message.from_user.id
    parts = message.text.strip()
    
    if parts.startswith('/set_description'):
        description = parts[16:].strip()
    elif parts.lower().startswith('—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ'):
        description = parts[16:].strip()
    else:
        description = ""   
    if not description:
        await message.answer("üìù –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                             "–ü—Ä–∏–º–µ—Ä: /set_nickname –õ—é–±–ª—é —Å–≤–µ—Ç–ª–æ–µ –ø–∏–≤–æ")
        return
    else:
        new_description = description
        set_user_description(user_id, description)
        await message.answer(f"‚úÖ –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.")


# –†–æ—É—Ç–µ—Ä '–ê–Ω–∫–µ—Ç–∞' - –≤—ã–≤–æ–¥–∏—Ç –∞–Ω–∫–µ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ª—Å –±–æ—Ç–∞(–±—É–¥–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞(–≤–æ–∑–º–æ–∂–Ω–æ))

@user_router.message(Command('anketa'))
@user_router.message(F.text.lower().in_(['–∞–Ω–∫–µ—Ç–∞','–¥–æ—Å—å–µ']))
async def profile_handler(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –∞–Ω–∫–µ—Ç—É.
    """
    user_id = message.from_user.id
    # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    profile_text = await get_profile_text(user_id)
    
    await message.answer(profile_text, parse_mode="Markdown")
    #await message.answer(f'–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã –í—ã –º–æ–∂–µ—Ç–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞.')

# –†–æ—É—Ç–µ—Ä —É–¥–∞–ª—è–µ—Ç –Ω–∏–∫
@user_router.message(Command('delete_nickname'))
@user_router.message(F.text.lower().in_(['—É–¥–∞–ª–∏—Ç—å –Ω–∏–∫','—É–¥–∞–ª–∏—Ç—å –∏–º—è']))
async def reset_nickname_handler(message: Message):
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –µ–≥–æ –∏–º–µ–Ω–∏ –≤ Telegram.
    """
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º first_name, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –Ω–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    first_name = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    set_user_nickname(user_id, first_name)
    
    await message.answer(f"üóëÔ∏è –í–∞—à–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å—Å—ã–ª–∫—É.", parse_mode="Markdown")

# –†–æ—É—Ç–µ—Ä —É–¥–∞–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ
@user_router.message(Command('delete_description'))
@user_router.message(F.text.lower().in_(['—É–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ','–æ—á–∏—Å—Ç–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ']))
async def clear_description_handler(message: Message):
    """
    –û—á–∏—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ None (–∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–æ—Ç–æ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º –∫–∞–∫ "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    # –õ–∏–±–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "", —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Ç–æ—Ç –∂–µ.
    set_user_description(user_id, None) 
    
    await message.answer("üóëÔ∏è –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å—Å—ã–ª–∫—É.")

# –†–æ—É—Ç–µ—Ä –≤—ã–≤–æ–¥–∏—Ç –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@user_router.message(F.text.lower().in_(['–º–æ–π –Ω–∏–∫','–Ω–∏–∫']))
async def show_my_nickname(message: Message):
    user_id = message.from_user.id
    nickname = get_user_nickname(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if nickname:
        await message.answer(f"üìù –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –Ω–∏–∫: **{nickname}**", parse_mode="Markdown")
    else:
        await message.answer("–Ø —Ç–µ–±—è –µ—â—ë –Ω–µ –∑–Ω–∞—é. –ù–∞–ø–∏—à–∏ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")


# –†–æ—É—Ç–µ—Ä –≤—ã–≤–æ–¥–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@user_router.message(F.text.lower().in_(['–º–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ','–æ–ø–∏—Å–∞–Ω–∏–µ']))
async def show_my_description(message: Message):
    user_id = message.from_user.id
    description = get_user_description(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    if description:
        await message.answer(f"üìÑ –¢–≤–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ:\n_{description}_", parse_mode="Markdown")
    else:
        # –≠—Ç–∞ –≤–µ—Ç–∫–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ None –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        await message.answer("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è. –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π `/set_description`.", parse_mode="Markdown")

@user_router.message(Command('my_rate'))
@user_router.message(F.text.lower().in_(['–º–æ–π —Ä–µ–π—Ç–∏–Ω–≥']))
async def my_rate(message: Message):
    user_id = message.from_user.id
    rate = get_user_rate(user_id)

    # –î–æ—Å—Ç–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    if 5001 <= rate <= 10000:
        rank = "S"
        await message.reply(f"üëë –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 5001-10000 –∏ –≤—ã—à–µ\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")

    elif 3501 <= rate <= 5000:
        rank = "A"
        await message.reply(f"üêâ –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 3501-5000\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")

    elif 1001 <= rate <= 3500:
        rank = "B"
        await message.reply(f"‚òÄÔ∏è –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 1001-3500\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")

    elif 51 <= rate <= 1000:
        rank = "C"
        await message.reply(f"üçÄ –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 51-1000\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")

    elif -500 <= rate <= 50:
        rank = "D"
        await message.reply(f"üçÄ –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 51-1000\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")

    elif rate <= -500:
        rank = "F"
        await message.reply(f"‚ò†Ô∏è –í–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: -500 –∏ –Ω–∏–∂–µ\n–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –≤ –ø–∞—Ä—Ç–∏–∏: {rank}")        

# –†–æ—É—Ç–µ—Ä-–ø–∏–Ω–≥. –±–∞–Ω–∞–ª—å–Ω–æ.
@user_router.message(Command('ping'))
@user_router.message(F.text.lower().in_(['–ø–∏–Ω–≥','—Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∏–Ω–≥-–ø–æ–Ω–≥']))
async def ping_bot(message: Message): # type: ignore
    ev = (datetime.datetime.now(tz=datetime.timezone.utc) - message.date).microseconds / 1000000
    sent_message = await message.answer("ü§ñ –ò–∑–º–µ—Ä—è—é –ø–∏–Ω–≥...")
     # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ä–æ–≥ –¥–ª—è –ø–∏–Ω–≥–∞
    ping_threshold_sec = 0.05

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∏–Ω–≥–∞ –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    if ev < ping_threshold_sec:
        out = f"üèì –ü–∞—Ä—Ç–∏—è –≤—ã–∏–≥—Ä–∞–ª–∞ –≤ –ø–∏–Ω–≥-–ø–æ–Ω–≥ –∑–∞ <code>{ev}</code> —Å"
    else:
        out = f"üèì –ü–∞—Ä—Ç–∏—è –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ –≤ –ø–∏–Ω–≥-–ø–æ–Ω–≥ –∑–∞ <code>{ev}</code> —Å"
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
    await sent_message.edit_text(out)
    
# –†–æ—É—Ç–µ—Ä –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
@user_router.message(Command("adminlist"))
@user_router.message(F.text.lower().in_(['–∫—Ç–æ –∞–¥–º–∏–Ω','–∞–¥–º–∏–Ω—ã','–∫—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä','–∫—Ç–æ —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å','.–ø–∞—Ä—Ç–∏—è']))
async def admin_list_command(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admins = get_all_admins()
    if not admins:
        await message.answer("–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
    admin_list_text = "<b>üéì –ù–∞—à–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ–ª–∏:</b>\n"
    for user_id, first_name in admins:
        admin_list_text += f"- <a href='tg://user?id={user_id}'>{first_name}</a> (ID: {user_id})\n"

    await message.answer(admin_list_text, parse_mode='HTML')
