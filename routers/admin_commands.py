from aiogram import Router, F
from aiogram.filters.command import Command
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest

from database import (
    is_admin, add_admin, 
    remove_admin, get_user_rate,
    get_user_rate, update_user_rate,
    unrate_user
)

ADMIN_IDS = [1534963580, 1103985703, 5806584445] # - –ò–î –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, —É –∫–æ–≥–æ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º. –ù—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –±–¥.

admin_router = Router() # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
admin_router.message.filter(F.from_user.id.in_(ADMIN_IDS)) 
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¢–û–õ–¨–ö–û –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏–∑ –±–¥.
# (–°–¥–µ–ª–∞—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –ø—Ä–æ—Å—Ç—ã–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏(–ø—Ä–µ—Ñ–∏–∫—Å) –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞)

@admin_router.message(Command('ban'))
@admin_router.message(F.text.lower().startswith('–±–∞–Ω')) 
# –ù–æ–≤—ã–π –¥–ª—è –º–µ–Ω—è –º–æ–¥—É–ª—å .startswith - —É–ª–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞—á–∞–ª–æ –∫–æ–º–∞–Ω–¥—ã. –ù—É–∂–µ–Ω –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä—É–≥–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. 
async def ban_user(message: Message, bot: 'Bot'): # type: ignore
        banned_user = None
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if message.reply_to_message:
            banned_user = message.reply_to_message.from_user
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @username –≤ –∫–æ–º–∞–Ω–¥–µ
        else:
            args = message.text.split()
            if len(args) < 2:
                await message.answer("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∑–∞–≤ @username.")
                return

            username = args[1]
            if username.startswith('@'):
                username = username[1:]  # –£–±–∏—Ä–∞–µ–º @

                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ –ø–æ username
                    chat_members = await bot.get_chat_member(chat_id=message.chat.id, user_id=username)
                    banned_user = chat_members.user
                except TelegramBadRequest:
                    await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
                    return
            else:
                await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ banned_user –Ω–∞–π–¥–µ–Ω
        if not banned_user:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º —Å–µ–±—è
        if banned_user.id == message.from_user.id:
            await message.answer("‚ùå –ü–∞—Ä—Ç–∏—è –Ω–µ –æ–¥–æ–±—Ä—è–µ—Ç —Å–∞–º–æ–≤—ã–ø–∏–ª")
            return

        # –í—ã–ø–æ–ª–Ω—è–µ–º –±–∞–Ω
        try:
            await bot.ban_chat_member(chat_id=message.chat.id, user_id=banned_user.id)
        except TelegramBadRequest as e:
            await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
        await message.answer(
            f'üå≤–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å <a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> '
            f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ <a href="tg://user?id={banned_user.id}">{banned_user.first_name}</a>',
            f'–í–æ–ª—è –ø–∞—Ä—Ç–∏–∏ ‚Äì –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ.'
            )

# –†–æ—É—Ç–µ—Ä –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
@admin_router.message(F.text.lower().startswith('+–∞–¥–º–∏–Ω'))
async def add_admin_command(message: Message, bot: 'Bot'): # type: ignore
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
    if message.chat.type not in ["group", "supergroup"]:
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!")
        return
    print(f"–ö–æ–º–∞–Ω–¥–∞ +–∞–¥–º–∏–Ω –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")  # –û—Ç–ª–∞–¥–∫–∞

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ ADMIN_IDS
    if message.from_user.id not in ADMIN_IDS:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ –≤ ADMIN_IDS")  # –û—Ç–ª–∞–¥–∫–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    new_admin = None

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.reply_to_message:
        new_admin = message.reply_to_message.from_user
        print(f"–ù–æ–≤—ã–π –∞–¥–º–∏–Ω (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç): {new_admin.id}")  # –û—Ç–ª–∞–¥–∫–∞
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @username
    else:
        args = message.text.split()
        if len(args) < 2:
            await message.answer("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∑–∞–≤ @username.")
            return

        username = args[1]
        if username.startswith('@'):
            username = username[1:]  # –£–±–∏—Ä–∞–µ–º @
            try:
                chat_member = await bot.get_chat_member(chat_id=message.chat.id, user_id=username)
                new_admin = chat_member.user
                print(f"–ù–æ–≤—ã–π –∞–¥–º–∏–Ω (—á–µ—Ä–µ–∑ @username): {new_admin.id}")  # –û—Ç–ª–∞–¥–∫–∞
            except TelegramBadRequest:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω")  # –û—Ç–ª–∞–¥–∫–∞
                await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
                return
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ new_admin –Ω–∞–π–¥–µ–Ω
    if not new_admin:
        print("new_admin –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω")  # –û—Ç–ª–∞–¥–∫–∞
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–æ–º
    if is_admin(new_admin.id):
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={new_admin.id}'>{new_admin.first_name}</a> —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", parse_mode='HTML')
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    add_admin(new_admin.id, new_admin.first_name)
    await message.answer(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={new_admin.id}'>{new_admin.first_name}</a> –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!",
        parse_mode='HTML'
    )

# –†–æ—É—Ç–µ—Ä —Å–Ω–∏–º–∞—é—â–∏–π —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∞
@admin_router.message(F.text.lower().startswith('-–∞–¥–º–∏–Ω'))
async def remove_admin_command(message: Message, bot: 'Bot'): # type: ignore
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
    if message.chat.type not in ["group", "supergroup"]:
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!")
        print(f"–ö–æ–º–∞–Ω–¥–∞ -–∞–¥–º–∏–Ω –≤—ã–∑–≤–∞–Ω–∞ –≤ {message.chat.type}, –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")  # –û—Ç–ª–∞–¥–∫–∞
        return

    print(f"–ö–æ–º–∞–Ω–¥–∞ -–∞–¥–º–∏–Ω –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")  # –û—Ç–ª–∞–¥–∫–∞

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ ADMIN_IDS
    if message.from_user.id not in ADMIN_IDS:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ –≤ ADMIN_IDS")  # –û—Ç–ª–∞–¥–∫–∞
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    target_user = None

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.reply_to_message:
        target_user = message.reply_to_message.from_user
        print(f"–ê–¥–º–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç): {target_user.id}")  # –û—Ç–ª–∞–¥–∫–∞
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @username
    else:
        args = message.text.split()
        if len(args) < 2:
            await message.answer("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∑–∞–≤ @username.")
            return

        username = args[1]
        if username.startswith('@'):
            username = username[1:]  # –£–±–∏—Ä–∞–µ–º @
            try:
                chat_member = await bot.get_chat_member(chat_id=message.chat.id, user_id=username)
                target_user = chat_member.user
                print(f"–ê–¥–º–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—á–µ—Ä–µ–∑ @username): {target_user.id}")  # –û—Ç–ª–∞–¥–∫–∞
            except TelegramBadRequest:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω")  # –û—Ç–ª–∞–¥–∫–∞
                await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
                return
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ target_user –Ω–∞–π–¥–µ–Ω
    if not target_user:
        print("target_user –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω")  # –û—Ç–ª–∞–¥–∫–∞
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if not is_admin(target_user.id):
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={target_user.id}'>{target_user.first_name}</a> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!", parse_mode='HTML')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏—Ç—å —Å–∞–º —Å–µ–±—è
    if target_user.id == message.from_user.id:
        await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
        return

    # –£–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞f
    remove_admin(target_user.id)
    await message.answer(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={target_user.id}'>{target_user.first_name}</a> —É–¥–∞–ª—ë–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!",
        parse_mode='HTML'
    )


@admin_router.message(F.text.lower().startswith("+—Ä–µ–π—Ç–∏–Ω–≥"))
async def add_rate(message: Message):
    try:
        text = message.text.strip()
        
        if text.lower().startswith("+—Ä–µ–π—Ç–∏–Ω–≥"):
            args = text[8:].strip()
            
            if not args:
                await message.reply("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–∞–≤–∞–µ–º–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞!")
                return
            
            try:
                rate_to_add = int(args)
                
                if rate_to_add <= 0:
                    await message.reply("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
                    return
                
                if message.reply_to_message:
                    user_id = message.reply_to_message.from_user.id
                    current_rate = get_user_rate(user_id)
                    new_rate = current_rate + rate_to_add
                    update_user_rate(user_id, new_rate)
                    
                    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–¥–∞–Ω–æ {rate_to_add} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {new_rate}")
                else:
                    user_id = message.from_user.id
                    current_rate = get_user_rate(user_id)
                    new_rate = current_rate + rate_to_add
                    update_user_rate(user_id, new_rate)
                    
                    await message.reply(f"–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ {rate_to_add} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {new_rate}")
            
            except ValueError:
                await message.reply("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
    
    except Exception as e:
        await message.answer(f'–û—à–∏–±–∫–∞: {e}')

@admin_router.message(F.text.lower().startswith("-—Ä–µ–π—Ç–∏–Ω–≥"))
async def remove_rate(message: Message):
    try:
        text = message.text.strip()
        
        if text.lower().startswith("-—Ä–µ–π—Ç–∏–Ω–≥"):
            args = text[8:].strip()

            if not args:
                await message.reply("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∏–º–∞–µ–º–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞!")
                return
            
            try:
                rate_to_remove = int(args)
                
                if rate_to_remove <= 0:
                    await message.reply("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
                    return
                
                if message.reply_to_message:
                    user_id = message.reply_to_message.from_user.id
                    current_rate = get_user_rate(user_id)
                    new_rate = current_rate - rate_to_remove  # –ù–µ –¥–∞–µ–º —É–π—Ç–∏ –≤ –º–∏–Ω—É—Å
                    update_user_rate(user_id, new_rate)
                    
                    await message.reply(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–Ω—è—Ç–æ {rate_to_remove} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {new_rate}")
                else:
                    user_id = message.from_user.id
                    current_rate = get_user_rate(user_id)
                    new_rate = current_rate - rate_to_remove
                    update_user_rate(user_id, new_rate)
                    
                    await message.reply(f"–í—ã —Å–Ω—è–ª–∏ —Å–µ–±–µ {rate_to_remove} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {new_rate}")
            
            except ValueError:
                await message.reply("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
    
    except Exception as e:
        await message.answer(f'–û—à–∏–±–∫–∞: {e}')

@admin_router.message(F.text.lower().startswith('–∞–Ω—Ä–µ–π—Ç'))
async def unrate(message: Message):
    try:
        text = message.text.strip().lower()
        
        args = text[6:].strip() if len(text) > 6 else ""
        
        if message.reply_to_message:
            user_id = message.reply_to_message.from_user.id
            username = message.reply_to_message.from_user.username
            rate = 0
            unrate_user(user_id, rate)
            
            await message.reply(
                f"‚úÖ –ü–∞—Ä—Ç–∏—è –æ–±–Ω—É–ª–∏–ª–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                f"üë§ ID: {user_id}\n"
                f"üìõ Username: @{username if username else '–Ω–µ—Ç'}"
            )
            
        elif args:
            # –°–ª—É—á–∞–π 2: –ö–æ–º–∞–Ω–¥–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º (@username)
            if args.startswith('@'):
                username = args[1:].strip()
                user_id = get_user_id_by_username(username)
                
                if user_id:
                    rate = 0
                    unrate_user(user_id, rate)
                    await message.reply(
                        f"‚úÖ –ü–∞—Ä—Ç–∏—è –æ–±–Ω—É–ª–∏–ª–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                        f"üë§ ID: {user_id}\n"
                        f"üìõ Username: @{username}"
                    )
                else:
                    id = args[1:].strip()
                    if id:
                        rate = 0 
                        unrate_user(user_id, rate)
                        await message.reply(
                            f"‚úÖ –ü–∞—Ä—Ç–∏—è –æ–±–Ω—É–ª–∏–ª–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                            f"üë§ ID: {id}\n")
                    
                # await message.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
            else:
        
                try:
                    user_id = int(args)
                    rate = 0
                    unrate_user(user_id, rate)
                    await message.reply(f"‚úÖ –ü–∞—Ä—Ç–∏—è –æ–±–Ω—É–ª–∏–ª–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {user_id}")
                except ValueError:
                    await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n‚Ä¢ /–∞–Ω—Ä–µ–π—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n‚Ä¢ /–∞–Ω—Ä–µ–π—Ç @username\n‚Ä¢ /–∞–Ω—Ä–µ–π—Ç 123456")
        
        else:
            user_id = message.from_user.id
            username = message.from_user.username
            rate = 0
            unrate_user(user_id, rate)
            
            await message.reply(
                f"‚úÖ –ü–∞—Ä—Ç–∏—è –æ–±–Ω—É–ª–∏–ª–∞ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥\n"
                f"üë§ ID: {user_id}\n"
                f"üìõ Username: @{username if username else '–Ω–µ—Ç'}"
            )
            
    except Exception as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ user_id –ø–æ username
def get_user_id_by_username(username: str) -> int:
    # conn = sqlite3.connect('your_database.db')
    # cursor = conn.cursor()
    # cursor.execute('SELECT user_id FROM users WHERE username = ?', (username,))
    # result = cursor.fetchone()
    # conn.close()
    # return result[0] if result else None
    
    return None
